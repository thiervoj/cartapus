function t(){}t.prototype={on:function(t,e,s){var r=this.e||(this.e={});return(r[t]||(r[t]=[])).push({fn:e,ctx:s}),this},once:function(t,e,s){var r=this;function o(){r.off(t,o),e.apply(s,arguments)}return o._=e,this.on(t,o,s)},emit:function(t){for(var e=[].slice.call(arguments,1),s=((this.e||(this.e={}))[t]||[]).slice(),r=0,o=s.length;r<o;r++)s[r].fn.apply(s[r].ctx,e);return this},off:function(t,e){var s=this.e||(this.e={}),r=s[t],o=[];if(r&&e)for(var a=0,i=r.length;a<i;a++)r[a].fn!==e&&r[a].fn._!==e&&o.push(r[a]);return o.length?s[t]=o:delete s[t],this}};var e=t;e.TinyEmitter=t;class s extends e{constructor(t={}){super(),this.intersect=this.intersect.bind(this),this.mutate=this.mutate.bind(this),this.isObserving=!1,this.options=Object.assign({root:null,rootMargin:"0px",threshold:0,once:!1},t),this.observers=[this.createObserver()],this.createObservers(),this.createMutationObserver(),this.observe()}createObservers(){const t=(this.options.root?this.options.root:document).querySelectorAll("[data-cartapus]");for(const e of t)this.storeNewElement(e)}findObserverForElement(t){const e=t.dataset.cartapusThreshold?parseFloat(t.dataset.cartapusThreshold):this.options.threshold,s=t.dataset.cartapusRootMargin?t.dataset.cartapusRootMargin:this.options.rootMargin;return this.observers.find(t=>t.threshold===e&&t.rootMargin===s)}storeNewElement(t){if(!t||!t.hasAttribute||!t.hasAttribute("data-cartapus"))return!1;if(t.dataset.cartapusThreshold||t.dataset.cartapusRootMargin){const e=this.findObserverForElement(t);if(e)e.elements.push(t),t._cartapus=e;else{const e=t.dataset.cartapusThreshold?parseFloat(t.dataset.cartapusThreshold):this.options.threshold;this.observers.push(this.createObserver({element:t,options:{threshold:e,rootMargin:t.dataset.cartapusRootMargin?t.dataset.cartapusRootMargin:this.options.rootMargin}}))}}else this.observers[0].elements.push(t),t._cartapus=this.observers[0];return!0}createObserver({options:t,element:e}={}){const s=Object.assign(this.options,t),r={observer:new IntersectionObserver(this.intersect,s),threshold:s.threshold,rootMargin:s.rootMargin,elements:e?[e]:[],once:!(!e||!e.hasAttribute("data-cartapus-once")||"false"===e.getAttribute("data-cartapus-once"))||s.once};return e&&(e._cartapus=r),r}createMutationObserver(){this.mutationObserver=new MutationObserver(this.mutate),this.mutationObserver.observe(this.options.root?this.options.root:document.body,{childList:!0,subtree:!0})}intersect(t,e){for(const s of t){if(s.isIntersecting){s.target.setAttribute("data-cartapus","visible");const t=s.target.getAttribute("data-cartapus-once");if("false"===t)continue;(s.target._cartapus.once||null!==t)&&e.unobserve(s.target)}else s.target.setAttribute("data-cartapus","hidden");this.dispatch(s)}}dispatch(t){const e={element:t.target,visible:t.isIntersecting,intersection:t},s=new CustomEvent("cartapusintersect",{detail:e});t.target.dispatchEvent(s),this.emit("intersect",e)}mutate(t){for(const e of t)if("childList"===e.type){for(const t of e.addedNodes)if(this.storeNewElement(t)&&t._cartapus.observer.observe(t),t._cartapus){const e=t.querySelectorAll("[data-cartapus]");for(const t of e)this.storeNewElement(t)&&t._cartapus&&t._cartapus.observer.observe(t)}for(const t of e.removedNodes){if(t._cartapus){const e=t._cartapus.elements.indexOf(t);t._cartapus.elements.splice(e,1),t._cartapus.observer.unobserve(t)}if(t._cartapus){const e=t.querySelectorAll("[data-cartapus]");for(const t of e)if(t._cartapus){const e=t._cartapus.elements.indexOf(t);t._cartapus.elements.splice(e,1),t._cartapus.observer.unobserve(t)}}}}}observe(){if(!this.isObserving){this.isObserving=!0;for(const t of this.observers)for(const e of t.elements)t.observer.observe(e)}}unobserve(){if(this.isObserving){this.isObserving=!1;for(const t of this.observers)for(const e of t.elements)t.observer.unobserve(e)}}destroy(){this.unobserve(),this.mutationObserver.disconnect();for(const t of this.observers){for(const e of t.elements)delete e._cartapus;t.observer.disconnect(),t.elements=[]}}}export{s as default};
//# sourceMappingURL=cartapus.modern.mjs.map
